import base64
exec(base64.b64decode('IzF1c3IvYmluL3B5dGhvbgppbXBvcnQgb3MsdGltZSxyYW5kb20sYmFzZTY0LHN0cmluZyxyZXF1ZXN0cwp0cnkgOgogICAgICAgIG9zLnN5c3RlbSgnY2xlYXInKQogICAgICAgIGRlZiBiYW5uZXIoKToKICAgICAgICAgICBwcmludCgnJycKICAgICAgICBcMDMzWzE7MzM7NDBtVEJvbWIgSW5maW5pdGVyO1wwMzNbMTszMzs0MG0KICAgICAgICBUaGlzIFNjcmlwdCBpcyBtYWRlIEJ5IE9HR1kKICAgICAgICBodHRwczovL2dpdGh1Yi5jb20vb2dneTMwMTIKCiAgICAgICAgVEJvbWIgOi0gaHR0cHM6Ly9naXRodWIuY29tL1RoZVNwZWVkWC9UQm9tYgogICAgICAgIFRCb21iIElORklOSVRFUiBTQ1JJUFQgOi0tPiBodHRwczovL2dpdGh1Yi5jb20vb2dneTMwMTIvdGJvbWItaW5maW5pdGVyCgogICAgICAgIEpvaW4gVEJvbWIgR3JvdXAgOi0tLT4gaHR0cHM6Ly9iaXQuZG8vc3BlZWR4Z2l0CiAgICAgICAgV2hhdHNBcHAgTWUgOi0tLS0tLT4gd2EubWUvKzkxODI5OTM1NzMzMgoKCiAgICAgICAgKkNVUlJFTlRMWSBOT1QgV09SS0lORyBGT1IgQ0FMTFMqJycnKQoKICAgICAgICBjb2RlX3JlcXVpcmVkPUZhbHNlCiAgICAgICAgZGVmIGNvZGUoc3RyaW5nTGVuZ3RoPTMwKToKICAgICAgICAgICAgICAgICIiIkdlbmVyYXRlIGEgcmFuZG9tIHN0cmluZyBvZiBsZXR0ZXJzIGFuZCBkaWdpdHMgIiIiCiAgICAgICAgICAgICAgICBsZXR0ZXJzQW5kRGlnaXRzID0gc3RyaW5nLmFzY2lpX2xldHRlcnMgKyBzdHJpbmcuZGlnaXRzCiAgICAgICAgICAgICAgICByZXR1cm4gJycuam9pbihyYW5kb20uY2hvaWNlKGxldHRlcnNBbmREaWdpdHMpIGZvciBpIGluIHJhbmdlKHN0cmluZ0xlbmd0aCkpCiAgICAgICAgYWE9Y29kZSgpCiAgICAgICAgZiA9IG9wZW4oIjEudHh0IiwidysiKQogICAgICAgIGYud3JpdGUoYWEpCiAgICAgICAgZi5jbG9zZSgpCiAgICAgICAgcnVuPSAnY3VybCAtRlwnZmlsZT1AMS50eHRcJyBodHRwOi8vMHgwLnN0ID4gMScKICAgICAgICBvcy5zeXN0ZW0ocnVuKQogICAgICAgIGY9IG9wZW4oIjEiLCJyIikKICAgICAgICBsaW49Zi5yZWFkKCkKICAgICAgICBvcy5zeXN0ZW0oJ3JtIC1mIDEudHh0ICYmIHJtIC1mIDEnKQogICAgICAgIHByaW50KHJ1bikKICAgICAgICBmNSA9IG9wZW4oJy5jaGVjay5vZ2d5JywnYSsnKQogICAgICAgIGlmIChsZW4oZjUucmVhZGxpbmVzKCkpJTI9PTApOgogICAgICAgICAgICAgICAgY29kZV9yZXF1aXJlZD1UcnVlCiAgICAgICAgICAgICAgICBlbnRlcl9jb2RlPSIiCiAgICAgICAgICAgICAgICBkZWYgbGluayhzdHJpbmdMZW5ndGg9Nik6CiAgICAgICAgICAgICAgICAgICAgICAgICIiIkdlbmVyYXRlIGEgcmFuZG9tIHN0cmluZyBvZiBsZXR0ZXJzIGFuZCBkaWdpdHMgIiIiCiAgICAgICAgICAgICAgICAgICAgICAgIGxldHRlcnNBbmREaWdpdHMgPSBzdHJpbmcuYXNjaWlfbGV0dGVycyArIHN0cmluZy5kaWdpdHMKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcnLmpvaW4ocmFuZG9tLmNob2ljZShsZXR0ZXJzQW5kRGlnaXRzKSBmb3IgaSBpbiByYW5nZShzdHJpbmdMZW5ndGgpKQoKICAgICAgICAgICAgICAgIHI9bGluaygpCiAgICAgICAgICAgICAgICBhPSdodHRwczovL2dwbGlua3MuaW4vYXBpP2FwaT1hOTBjYTRiYzQxOTljMjYyYjZiNzdiYTNhOGQ4NWI1M2Q4MmI0YTU4JnVybD0nK2xpbisnJmFsaWFzPScrcgogICAgICAgICAgICAgICAgcmVxdWVzdCA9IHJlcXVlc3RzLmdldChhKQogICAgICAgICAgICAgICAgaWYgKHJlcXVlc3Quc3RhdHVzX2NvZGUpID09IDIwMDoKICAgICAgICAgICAgICAgICAgdXJsPSdodHRwczovL2dwbGlua3MuaW4vJytyCiAgICAgICAgICAgICAgICBlbHNlIDoKICAgICAgICAgICAgICAgICAgcHJpbnQoJ1VSTCBGYWlsZWQnKQoKICAgICAgICAgICAgICAgIG9zLnN5c3RlbSgnY2xlYXImJmZpZ2xldCBPR0dZJykKICAgICAgICAgICAgICAgIGJhbm5lcigpCgogICAgICAgICAgICAgICAgcHJpbnQoJycnCgogICAgICAgIER1ZSBUbyBIZWF2eSBMb2FkcyBXZSBOZWVkIFRvIFZlcmlmeSB0aGF0IGl0cyBub3QgYSBSb2JvdCAKICAgICAgICBQbGVhc2UgZ28gVG8gdGhpcyBsaW5rIHRvIGdldCB0aGUgQ29kZSA6Ojo6LS0tPj4gJycnK3VybCkKICAgICAgICAgICAgICAgIHdoaWxlIFRydWU6CiAgICAgICAgICAgICAgICAgICAgIGlmIGVudGVyX2NvZGU9PWFhOgogICAgICAgICAgICAgICAgICAgICAgICBvcy5zeXN0ZW0oImNsZWFyIikKICAgICAgICAgICAgICAgICAgICAgICAgb3Muc3lzdGVtKCdmaWdsZXQgT0dHWScpCiAgICAgICAgICAgICAgICAgICAgICAgIGJhbm5lcigpCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJDb2RlIEFjY2VwdGVkICIpCiAgICAgICAgICAgICAgICAgICAgICAgIGNvZGVfcmVxdWlyZWQ9RmFsc2UKICAgICAgICAgICAgICAgICAgICAgICAgZjUud3JpdGUoIk9HR1lcbiIpCiAgICAgICAgICAgICAgICAgICAgICAgIGY1LmNsb3NlKCkKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgICAgICAgICAgZWxzZSA6CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGNvZGVfcmVxdWlyZWQ9PUZhbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgICAgICAgICAgICAgb3Muc3lzdGVtKCJjbGVhciIpCiAgICAgICAgICAgICAgICAgICAgICAgIG9zLnN5c3RlbSgnZmlnbGV0IE9HR1knKQogICAgICAgICAgICAgICAgICAgICAgICBiYW5uZXIoKQogICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXG5HbyBUbyB0aGlzIFVSTCB0byBnZXQgdGhlIGNvZGUgOjo6Oi0tLT4+Pj4+XHQiK3VybCkKICAgICAgICAgICAgICAgICAgICAgICAgI3ByaW50KGFhKQogICAgICAgICAgICAgICAgICAgICAgICBlbnRlcl9jb2RlPWlucHV0KCJFbnRlciBDb2RlIEhlcmUgOjo6Ojo6LS0tLS0tPj4+Pj4+ICIpCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGVudGVyX2NvZGUhPWFhOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIklOVkFMSUQgQ09ERSIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDAuNykKCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcGFzcwoKCgogICAgICAgIGlmIGNvZGVfcmVxdWlyZWQ9PUZhbHNlOgogICAgICAgICAgICAgICAgdD1pbnQoaW5wdXQoJ0VudGVyIERlbGF5IFRpbWUoaW4gU2Vjb25kcykgOi0tLS0tLT4+PiAnKSkKICAgICAgICAgICAgICAgIG9zLnN5c3RlbSgnY2xlYXInKQogICAgICAgICAgICAgICAgb3Muc3lzdGVtKCdmaWdsZXQgT0dHWScpCiAgICAgICAgICAgICAgICBiYW5uZXIoKQogICAgICAgICAgICAgICAgYz0wCiAgICAgICAgICAgICAgICBpZiBvcy5wYXRoLmV4aXN0cygiL3Jvb3QvVEJvbWIvY2FsbC54eHgiKSBvciBvcy5wYXRoLmV4aXN0cygiLyRIT01FL1RCb21iL2NhbGwueHh4Iikgb3Igb3MucGF0aC5leGlzdHMoIi9yb290L1RCb21iL2NvdW50Lnh4eCIpIG9yIG9zLnBhdGguZXhpc3RzKCIvJEhPTUUvVEJvbWIvY291bnQueHh4IikgOgoKICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIG9zLnBhdGguZXhpc3RzKCIvcm9vdC9UQm9tYi9jb3VudC54eHgiKSBvciBvcy5wYXRoLmV4aXN0cygiLyRIT01FL1RCb21iL2NvdW50Lnh4eCIpOgogICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAodCkKICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBjPT0wOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgb3Muc3lzdGVtKCdmaWdsZXQgT0dHWScpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYW5uZXIoKQogICAgICAgICAgICAgICAgICAgICAgICAgIGYgPSBvcGVuKCcvJEhPTUUvVEJvbWIvY291bnQueHh4JywndycpIAogICAgICAgICAgICAgICAgICAgICAgICAgIGYud3JpdGUoJ1NwZWVkWCcpCiAgICAgICAgICAgICAgICAgICAgICAgICAgZi5jbG9zZSgpCgkJCSAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgYys9MQogICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCdTTVMgUmVxdWVzdHMgU2VudCAtLS0tPj4nLGMpCiAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSBvcy5wYXRoLmV4aXN0cygiL3Jvb3QvVEJvbWIvY2FsbC54eHgiKSBvciBvcy5wYXRoLmV4aXN0cygiLyRIT01FL1RCb21iL2NhbGwueHh4Iik6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAodCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3Muc3lzdGVtKCdmaWdsZXQgT0dHWScpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhbm5lcigpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGYyID0gb3BlbignLyRIT01FL1RCb21iL2NvdW50Lnh4eCcsJ3cnKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmMi53cml0ZSgnJykKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZjIuY2xvc2UoKQoJCQkgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYys9MQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgnQ2FsbHMgTWFkZSA+LScsYykKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoJ0ZvciBDYWxscyBpdCBNYXkgbm90IHdvcmsgcHJvcGVybHkgaXRzIFVuZGVyIERldmVscG1lbnQnKQogICAgICAgICAgICAgICAgZWxzZSA6CiAgICAgICAgICAgICAgICAgICBvcy5zeXN0ZW0oJ2ZpZ2xldCBPR0dZJykKICAgICAgICAgICAgICAgICAgIGJhbm5lcigpCiAgICAgICAgICAgICAgICAgICBwcmludCgnVEJvbWIgTm90IFJ1bm5pbmcnKQogICAgICAgICAgICAgICAgICAgb3Muc3lzdGVtKCdmaWdsZXQgVEJvbWIgTm90IFJ1bm5pbmcgJiYgZXhpdCcpCiAgICAgICAgICAgICAgICAgICBwcmludCgnS2VlcCBUQm9tYiBSdW5uaW5nIGluIG90aGVyIHNlc3Npb24nKQogICAgICAgICAgICAgICAgICAgaWYgKG9zLnBhdGguZXhpc3RzKCIvcm9vdC9UQm9tYiIpIG9yIG9zLnBhdGguZXhpc3RzKCIvJEhPTUUvVEJvbWIiKSk9PSBGYWxzZToKICAgICAgICAgICAgICAgICAgICAgIG9zLnN5c3RlbSgiY2QmJmdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vVGhlU3BlZWRYL1RCb21iIikKICAgICAgICBlbHNlIDoKICAgICAgICAgICAgIHByaW50KCJDb2RlIFJlcXVpcmVkIikKZXhjZXB0IEtleWJvYXJkSW50ZXJydXB0OgoJZiA9IG9wZW4oJy8kSE9NRS9UQm9tYi9jb3VudC54eHgnLCd3JykgCglmb3IgeCBpbiByYW5nZSAoNDAxKToKICAgICAgICAgICAgZi53cml0ZSgnU3BlZWRYXG4nKQoJZi5jbG9zZSgpCglvcy5zeXN0ZW0oImV4aXQgJiYgZmlnbGV0IFRoYW5rIFlvdSIp'))
